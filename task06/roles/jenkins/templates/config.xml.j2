<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.5">
      <projectUrl>https://github.com/L-Eugene/word-cloud-generator/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.1.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/L-Eugene/word-cloud-generator.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
        export GOPATH=$WORKSPACE
        export PATH="$PATH:$(go env GOPATH)/bin"

        sed -i 's/1.DEVELOPMENT/1.$BUILD_NUMBER/g' ./rice-box.go

        make

        md5sum artifacts/*/word-cloud-generator* >artifacts/word-cloud-generator.md5

        gzip artifacts/*/word-cloud-generator*
      </command>
    </hudson.tasks.Shell>
    <sp.sd.nexusartifactuploader.NexusArtifactUploader plugin="nexus-artifact-uploader@2.10">
      <nexusVersion>nexus3</nexusVersion>
      <protocol>http</protocol>
      <nexusUrl>{{ nexus_ip }}:8081</nexusUrl>
      <groupId>1</groupId>
      <version>1.$BUILD_NUMBER</version>
      <repository>word-cloud-generator</repository>
      <artifacts>
        <sp.sd.nexusartifactuploader.Artifact>
          <artifactId>word-cloud-generator</artifactId>
          <type>gz</type>
          <classifier></classifier>
          <file>artifacts/linux/word-cloud-generator.gz</file>
        </sp.sd.nexusartifactuploader.Artifact>
      </artifacts>
      <credentialsId>nexus-id</credentialsId>
    </sp.sd.nexusartifactuploader.NexusArtifactUploader>
    <jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin plugin="publish-over-ssh@1.20.1">
      <delegate>
        <consolePrefix>SSH: </consolePrefix>
        <delegate plugin="publish-over@0.22">
          <publishers>
            <jenkins.plugins.publish__over__ssh.BapSshPublisher plugin="publish-over-ssh@1.20.1">
              <configName>staging server</configName>
              <verbose>false</verbose>
              <transfers>
                <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                  <remoteDirectory></remoteDirectory>
                  <sourceFiles></sourceFiles>
                  <excludes></excludes>
                  <removePrefix></removePrefix>
                  <remoteDirectorySDF>false</remoteDirectorySDF>
                  <flatten>false</flatten>
                  <cleanRemote>false</cleanRemote>
                  <noDefaultExcludes>false</noDefaultExcludes>
                  <makeEmptyDirs>false</makeEmptyDirs>
                  <patternSeparator>[, ]+</patternSeparator>
                  <execCommand>sudo service wordcloud stop

                    curl -X GET -u admin:admin "http://{{ nexus_ip }}:8081/repository/word-cloud-generator/1/word-cloud-generator/1.$BUILD_NUMBER/word-cloud-generator-1.$BUILD_NUMBER.gz" -o /opt/wordcloud/word-cloud-generator.gz
                    gunzip -f /opt/wordcloud/word-cloud-generator.gz
                    chmod +x /opt/wordcloud/word-cloud-generator

                    sudo service wordcloud start
                  </execCommand>
                  <execTimeout>120000</execTimeout>
                  <usePty>false</usePty>
                  <useAgentForwarding>false</useAgentForwarding>
                </jenkins.plugins.publish__over__ssh.BapSshTransfer>
              </transfers>
              <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
              <usePromotionTimestamp>false</usePromotionTimestamp>
            </jenkins.plugins.publish__over__ssh.BapSshPublisher>
            <jenkins.plugins.publish__over__ssh.BapSshPublisher plugin="publish-over-ssh@1.20.1">
              <configName>production server</configName>
              <verbose>false</verbose>
              <transfers>
                <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                  <remoteDirectory></remoteDirectory>
                  <sourceFiles></sourceFiles>
                  <excludes></excludes>
                  <removePrefix></removePrefix>
                  <remoteDirectorySDF>false</remoteDirectorySDF>
                  <flatten>false</flatten>
                  <cleanRemote>false</cleanRemote>
                  <noDefaultExcludes>false</noDefaultExcludes>
                  <makeEmptyDirs>false</makeEmptyDirs>
                  <patternSeparator>[, ]+</patternSeparator>
                  <execCommand>sudo service wordcloud stop

                    curl -X GET -u admin:admin "http://{{ nexus_ip }}:8081/repository/word-cloud-generator/1/word-cloud-generator/1.$BUILD_NUMBER/word-cloud-generator-1.$BUILD_NUMBER.gz" -o /opt/wordcloud/word-cloud-generator.gz
                    gunzip -f /opt/wordcloud/word-cloud-generator.gz
                    chmod +x /opt/wordcloud/word-cloud-generator

                    sudo service wordcloud start</execCommand>
                  <execTimeout>120000</execTimeout>
                  <usePty>false</usePty>
                  <useAgentForwarding>false</useAgentForwarding>
                </jenkins.plugins.publish__over__ssh.BapSshTransfer>
              </transfers>
              <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
              <usePromotionTimestamp>false</usePromotionTimestamp>
            </jenkins.plugins.publish__over__ssh.BapSshPublisher>
          </publishers>
          <continueOnError>false</continueOnError>
          <failOnError>false</failOnError>
          <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
          <hostConfigurationAccess class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin" reference="../.."/>          </delegate>
      </delegate>
    </jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin>
    <hudson.tasks.Shell>
      <command>
        res=`curl -s -H "Content-Type: application/json" http://{{ staging_ip }}:8888/version | jq '. | length'`
        if [ "1" != "$res" ]; then
          exit 99
        fi

        res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://{{ staging_ip }}:8888/api | jq '. | length'`
        if [ "7" != "$res" ]; then
          exit 99
        fi
      </command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>
        res=`curl -s -H "Content-Type: application/json" http://{{ production_ip }}:8888/version | jq '. | length'`
        if [ "1" != "$res" ]; then
          exit 99
        fi

        res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://{{ production_ip }}:8888/api | jq '. | length'`
        if [ "7" != "$res" ]; then
          exit 99
        fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.golang.GolangBuildWrapper plugin="golang@1.2">
      <goVersion>Go</goVersion>
    </org.jenkinsci.plugins.golang.GolangBuildWrapper>
  </buildWrappers>
</project>